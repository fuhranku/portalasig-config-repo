spring:
  jpa:
    hibernate.ddl-auto: none
    open-in-view: true
  application:
    flyway:
      enabled: true

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
management:
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  otlp:
    metrics:
      export:
        url: http://localhost:4318/v1/metrics
        step: 10s
    tracing:
      endpoint: http://localhost:4318/v1/traces
  metrics:
    distribution:
      percentiles:
        do.sleep.method.timed: 0.99, 0.95, 0.9, 0.7, 0.5
        http.server.requests: 0.99, 0.95, 0.9, 0.7, 0.5
      percentiles-histogram:
        do.sleep.method.timed: true
        http.server.requests: true
      minimum-expected-value:
        do.sleep.method.timed: 100ms
        http.server.requests: 100ms
      maximum-expected-value:
        do.sleep.method.timed: 10s
        http.server.requests: 10s
      slo:
        do.sleep.method.timed: 300ms,500ms,1s,2s
        http.server.requests: 300ms,500ms,1s,2s
  endpoints:
    web:
      exposure:
        include: '*'

---
spring:
  config.activate.on-profile: local
  security:
    oauth2:
      client:
        registration:
          portalasig_engine:
            authorization-grant-type: client_credentials
            client-id: portalasig_engine
            client-secret: '{cipher}090795838436a9da213cd43610668adc041505c4a1b52255e63ca5d170b4d3997a0ef48effa75a8309e7fe6197a896b8'
        provider:
          portalasig_engine:
            token-uri: http://localhost:5860/portalasig/uaa/oauth2/token

ENV: local # This will be used later to make local point to CI services

backend-uri: http://localhost

portalasig.security.oauth2.authorization-server.jwt.issuer-uri: ${backend-uri}:5860/portalasig/uaa
portalasig.uaa.ms.v1.url: ${backend-uri}:5860/portalasig/uaa/v1

